{
  "info": {
    "_postman_id": "46749b1d-c086-4298-8444-c06b328b6dac",
    "name": "ðŸ“š Library API",
    "description": "Welcome to Cloud Apps Library REST API. Kudos to Roy Fielding.\n\nContact Support:\n Name: GitHub repository",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "users",
      "item": [
        {
          "name": "Get all the users",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/users",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "users"
              ]
            }
          },
          "response": [
            {
              "name": "Return all the users",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/users",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "users"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n \"id\": 57873316,\n \"nick\": \"et incididunt consectetur ut sunt\",\n \"email\": \"voluptate incididunt Duis\"\n}"
            }
          ]
        },
        {
          "name": "Create a new user",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"nick\": \"<string>\",\n    \"email\": \"<string>\"\n}",
              "options": {
                "raw": {}
              }
            },
            "url": {
              "raw": "{{baseUrl}}/api/users",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "users"
              ]
            }
          },
          "response": [
            {
              "name": "The user has been created",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"nick\": \"<string>\",\n    \"email\": \"<string>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/users",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "users"
                  ]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Location",
                  "value": "",
                  "description": "URL where the new resource is located"
                },
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            },
            {
              "name": "User already exists",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"nick\": \"<string>\",\n    \"email\": \"<string>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/users",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "users"
                  ]
                }
              },
              "status": "Conflict",
              "code": 409,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            },
            {
              "name": "Fields input validation error",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"nick\": \"<string>\",\n    \"email\": \"<string>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/users",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "users"
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Get a user given its id",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/users/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "users",
                ":id"
              ],
              "variable": [
                {
                  "id": "fe1b7616-9385-4b1a-b46f-1a93f4feddbe",
                  "key": "id",
                  "value": "<long>",
                  "type": "string",
                  "description": "(Required) "
                }
              ]
            }
          },
          "response": [
            {
              "name": "Found the user",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/users/:id",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "users",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n \"id\": 57873316,\n \"nick\": \"et incididunt consectetur ut sunt\",\n \"email\": \"voluptate incididunt Duis\"\n}"
            },
            {
              "name": "User not found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/users/:id",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "users",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Delete a user",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/users/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "users",
                ":id"
              ],
              "variable": [
                {
                  "id": "4a406297-8bba-405b-845d-8423b7dda349",
                  "key": "id",
                  "value": "<long>",
                  "type": "string",
                  "description": "(Required) "
                }
              ]
            }
          },
          "response": [
            {
              "name": "User not found",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/users/:id",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "users",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            },
            {
              "name": "The user has been deleted",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/users/:id",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "users",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "status": "No Content",
              "code": 204,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Update a user email",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"<string>\"\n}",
              "options": {
                "raw": {}
              }
            },
            "url": {
              "raw": "{{baseUrl}}/api/users/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "users",
                ":id"
              ],
              "variable": [
                {
                  "id": "f914f1ef-91ab-4759-bd19-8fc603170da0",
                  "key": "id",
                  "value": "<long>",
                  "type": "string",
                  "description": "(Required) "
                }
              ]
            }
          },
          "response": [
            {
              "name": "User not found",
              "originalRequest": {
                "method": "PATCH",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"<string>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/users/:id",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "users",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            },
            {
              "name": "The email has been updated",
              "originalRequest": {
                "method": "PATCH",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"email\": \"<string>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/users/:id",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "users",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "status": "No Content",
              "code": 204,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Get all comments of this user",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/users/:id/comments",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "users",
                ":id",
                "comments"
              ],
              "variable": [
                {
                  "id": "6227a603-0a60-4d3c-9b1d-24803e78ad9a",
                  "key": "id",
                  "value": "<long>",
                  "type": "string",
                  "description": "(Required) "
                }
              ]
            }
          },
          "response": [
            {
              "name": "Return the comments",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/users/:id/comments",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "users",
                    ":id",
                    "comments"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n \"id\": 39349628,\n \"body\": \"minim\",\n \"bookId\": 89658931,\n \"rating\": -4728719\n}"
            }
          ]
        }
      ],
      "protocolProfileBehavior": {}
    },
    {
      "name": "books",
      "item": [
        {
          "name": "Get all the books with their id and title",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/books",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "books"
              ]
            }
          },
          "response": [
            {
              "name": "Return all the books",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/books",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "books"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n \"id\": 73301207,\n \"title\": \"do anim sint minim\"\n}"
            }
          ]
        },
        {
          "name": "Create a new book",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"title\": \"<string>\",\n    \"summary\": \"<string>\",\n    \"author\": \"<string>\",\n    \"editorial\": \"<string>\",\n    \"publishYear\": \"<string>\",\n    \"uploader\": \"<string>\"\n}",
              "options": {
                "raw": {}
              }
            },
            "url": {
              "raw": "{{baseUrl}}/api/books",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "books"
              ]
            }
          },
          "response": [
            {
              "name": "The book has been created",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"title\": \"<string>\",\n    \"summary\": \"<string>\",\n    \"author\": \"<string>\",\n    \"editorial\": \"<string>\",\n    \"publishYear\": \"<string>\",\n    \"uploader\": \"<string>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/books",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "books"
                  ]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Location",
                  "value": "",
                  "description": "URL where the new resource is located"
                },
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            },
            {
              "name": "Fields input validation error",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"title\": \"<string>\",\n    \"summary\": \"<string>\",\n    \"author\": \"<string>\",\n    \"editorial\": \"<string>\",\n    \"publishYear\": \"<string>\",\n    \"uploader\": \"<string>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/books",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "books"
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Get a book given its id",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/books/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "books",
                ":id"
              ],
              "variable": [
                {
                  "id": "e739cb65-11ba-4a7e-a129-a471e22dfae3",
                  "key": "id",
                  "value": "<long>",
                  "type": "string",
                  "description": "(Required) "
                }
              ]
            }
          },
          "response": [
            {
              "name": "Found the book",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/books/:id",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "books",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n \"id\": -33724938,\n \"title\": \"dolore\",\n \"summary\": \"mollit sit magna\",\n \"author\": \"eu proident\",\n \"editorial\": \"sit aute\",\n \"publishYear\": 64913081,\n \"comments\": [\n  {\n   \"id\": -90562290,\n   \"authorNick\": \"reprehenderit cillum nisi\",\n   \"authorEmail\": \"irure et nostrud do\",\n   \"body\": \"sed esse deserunt dolore\"\n  },\n  {\n   \"id\": 33325753,\n   \"authorNick\": \"enim amet\",\n   \"authorEmail\": \"in ex cupidatat laboris\",\n   \"body\": \"exercitation in\"\n  }\n ],\n \"rating\": -16867705.620525748,\n \"uploaderId\": 13439577\n}"
            },
            {
              "name": "Book not found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/books/:id",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "books",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id"
                    }
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Publish a new comment about an specific book",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"nick\": \"<string>\",\n    \"body\": \"<string>\",\n    \"rating\": \"<integer>\"\n}",
              "options": {
                "raw": {}
              }
            },
            "url": {
              "raw": "{{baseUrl}}/api/books/:bookId/comments",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "books",
                ":bookId",
                "comments"
              ],
              "variable": [
                {
                  "id": "1bf82ebc-8c52-43a4-b0a0-ef5bf73d5ad4",
                  "key": "bookId",
                  "value": "<long>",
                  "type": "string",
                  "description": "(Required) "
                }
              ]
            }
          },
          "response": [
            {
              "name": "Fields input validation error",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"nick\": \"<string>\",\n    \"body\": \"<string>\",\n    \"rating\": \"<integer>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/books/:bookId/comments",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "books",
                    ":bookId",
                    "comments"
                  ],
                  "variable": [
                    {
                      "key": "bookId"
                    }
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            },
            {
              "name": "Book not found",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"nick\": \"<string>\",\n    \"body\": \"<string>\",\n    \"rating\": \"<integer>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/books/:bookId/comments",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "books",
                    ":bookId",
                    "comments"
                  ],
                  "variable": [
                    {
                      "key": "bookId"
                    }
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            },
            {
              "name": "The comment has been created",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"nick\": \"<string>\",\n    \"body\": \"<string>\",\n    \"rating\": \"<integer>\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/books/:bookId/comments",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "books",
                    ":bookId",
                    "comments"
                  ],
                  "variable": [
                    {
                      "key": "bookId"
                    }
                  ]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Location",
                  "value": "",
                  "description": "URL where the new resource is located"
                },
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Delete a published comment",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/books/:bookId/comments/:commentId",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "books",
                ":bookId",
                "comments",
                ":commentId"
              ],
              "variable": [
                {
                  "id": "6a2a5ca1-4c0f-4896-8800-5159f3c418de",
                  "key": "commentId",
                  "value": "<long>",
                  "type": "string",
                  "description": "(Required) "
                },
                {
                  "id": "e0baf756-7475-4c6a-b4e7-48e3e69ae6f0",
                  "key": "bookId",
                  "value": "<long>",
                  "type": "string",
                  "description": "(Required) "
                }
              ]
            }
          },
          "response": [
            {
              "name": "The comment has been deleted",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/books/:bookId/comments/:commentId",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "books",
                    ":bookId",
                    "comments",
                    ":commentId"
                  ],
                  "variable": [
                    {
                      "key": "bookId"
                    },
                    {
                      "key": "commentId"
                    }
                  ]
                }
              },
              "status": "No Content",
              "code": 204,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            },
            {
              "name": "Comment not found",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/books/:bookId/comments/:commentId",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "books",
                    ":bookId",
                    "comments",
                    ":commentId"
                  ],
                  "variable": [
                    {
                      "key": "bookId"
                    },
                    {
                      "key": "commentId"
                    }
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        }
      ],
      "protocolProfileBehavior": {}
    }
  ],
  "variable": [
    {
      "id": "baseUrl",
      "key": "baseUrl",
      "value": "http://localhost:8080",
      "type": "string"
    }
  ],
  "protocolProfileBehavior": {}
}